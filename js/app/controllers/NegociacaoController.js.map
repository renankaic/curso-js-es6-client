{"version":3,"sources":["../../app-es6/controllers/NegociacaoController.js"],"names":["NegociacaoController","$","document","querySelector","bind","_ordemAtual","_inputData","_inputQuantidade","_inputValor","_listaNegociacoes","Bind","ListaNegociacoes","NegociacoesView","_mensagem","Mensagem","MensagemView","_service","NegociacaoService","_init","lista","then","negociacoes","forEach","adiciona","negociacao","catch","console","log","erro","texto","setInterval","importaNegociacoes","event","preventDefault","_criaNegociacao","cadastra","mensagem","_limpaFormulario","importa","Negociacao","DateHelper","textoParaData","value","parseInt","parseFloat","focus","apagaTodos","esvazia","coluna","inverteOrdem","ordena","a","b"],"mappings":"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","file":"NegociacaoController.js","sourcesContent":["class NegociacaoController {\n\n    constructor() {\n        let $ = document.querySelector.bind(document);\n        \n        this._ordemAtual = '';\n        this._inputData = $(\"#data\");\n        this._inputQuantidade = $(\"#quantidade\");\n        this._inputValor = $(\"#valor\");\n        \n        this._listaNegociacoes = new Bind(\n            new ListaNegociacoes(),\n            new NegociacoesView($('#negociacoesView')),\n            'adiciona','esvazia', 'ordena', 'inverteOrdem'\n        );\n       \n        this._mensagem = new Bind(\n            new Mensagem(),\n            new MensagemView($(\"#mensagemView\")),\n            'texto'\n        );\n\n        this._service = new NegociacaoService();\n\n        this._init();\n\n    }\n\n    _init() {\n\n        this._service\n            .lista()\n            .then(negociacoes => \n                negociacoes.forEach(negociacao => \n                    this._listaNegociacoes.adiciona(negociacao)))\n            .catch (erro => {\n                console.log(erro);\n                this._mensagem.texto = erro;\n            });\n\n        setInterval(() => {\n            this.importaNegociacoes();\n        }, 3000);\n\n    }\n\n    adiciona(event){\n\n        event.preventDefault();\n\n        let negociacao = this._criaNegociacao();\n        this._service\n            .cadastra(negociacao)\n            .then(mensagem => {\n                this._listaNegociacoes.adiciona(negociacao);\n                this._mensagem.texto = mensagem;\n                this._limpaFormulario();\n            })\n            .catch(erro => this._mensagem.texto = erro);\n\n    }\n\n    importaNegociacoes() {\n\n        this._service\n            .importa(this._listaNegociacoes.negociacoes)\n            .then(negociacoes => {\n                negociacoes.forEach(negociacao => this._listaNegociacoes.adiciona(negociacao));\n                this._mensagem.texto = \"Negociações do período importadas com sucesso\";\n            })\n            .catch(erro => this._mensagem.texto = erro);\n\n    }\n\n    _criaNegociacao() {\n\n        return new Negociacao(\n            DateHelper.textoParaData(this._inputData.value),\n            parseInt(this._inputQuantidade.value),\n            parseFloat(this._inputValor.value)\n        );\n\n    }\n\n    _limpaFormulario() {\n\n        this._inputData.value = '';\n        this._inputQuantidade.value = 1;\n        this._inputValor.value = 0.0;\n        this._inputData.focus();\n\n    }\n\n    apaga() {\n\n        this._service\n            .apagaTodos()\n            .then(mensagem => {\n                this._mensagem.texto = mensagem;\n                this._listaNegociacoes.esvazia();\n            })\n            .catch(erro => this._mensagem.texto = erro);\n\n    }\n\n    ordena(coluna) {\n\n        if(this._ordemAtual == coluna){\n            this._listaNegociacoes.inverteOrdem();\n        } else {\n            this._listaNegociacoes.ordena((a, b) => a[coluna] - b[coluna]);\n        }\n        this._ordemAtual = coluna;\n\n    }\n\n}\n"]}