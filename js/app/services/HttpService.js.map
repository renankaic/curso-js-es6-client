{"version":3,"sources":["../../app-es6/services/HttpService.js"],"names":["HttpService","response","ok","Error","statusText","url","fetch","then","_handleErrors","json","dado","headers","method","body","JSON","stringify","res"],"mappings":";;;;;;IAAMA,W;;;;;;;sCAEYC,Q,EAAU;;AAEpB,gBAAI,CAACA,SAASC,EAAd,EAAkB,MAAM,IAAIC,KAAJ,CAAUF,SAASG,UAAnB,CAAN;AAClB,mBAAOH,QAAP;AAEH;;;4BAEGI,G,EAAK;AAAA;;AAEL,mBAAOC,MAAMD,GAAN,EACFE,IADE,CACG;AAAA,uBAAY,MAAKC,aAAL,CAAmBP,QAAnB,CAAZ;AAAA,aADH,EAEFM,IAFE,CAEG;AAAA,uBAAYN,SAASQ,IAAT,EAAZ;AAAA,aAFH,CAAP;AAIH;;;6BAEIJ,G,EAAKK,I,EAAM;AAAA;;AAEZ,mBAAOJ,MAAMD,GAAN,EAAW;AACdM,yBAAS,EAAE,gBAAe,kBAAjB,EADK;AAEdC,wBAAQ,MAFM;AAGdC,sBAAMC,KAAKC,SAAL,CAAeL,IAAf;AAHQ,aAAX,EAKNH,IALM,CAKD;AAAA,uBAAO,OAAKC,aAAL,CAAmBQ,GAAnB,CAAP;AAAA,aALC,CAAP;AAOH","file":"HttpService.js","sourcesContent":["class HttpService {\n\n    _handleErrors(response) {\n\n        if (!response.ok) throw new Error(response.statusText);\n        return response;\n\n    }\n\n    get(url) {\n\n        return fetch(url)\n            .then(response => this._handleErrors(response))\n            .then(response => response.json());\n\n    }\n\n    post(url, dado) {\n\n        return fetch(url, {\n            headers: { 'Content-Type':'application/json'},\n            method: 'post',\n            body: JSON.stringify(dado)\n        })\n        .then(res => this._handleErrors(res));\n\n    }\n}"]}