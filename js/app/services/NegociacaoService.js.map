{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["HttpService","ConnectionFactory","NegociacaoDao","Negociacao","NegociacaoService","_http","getConnection","then","connection","dao","listaTodos","catch","console","log","erro","Error","negociacao","adiciona","error","apagaTodos","listaAtual","obterNegociacoes","negociacoes","reduce","arrayAchatado","array","concat","filter","some","isEquals","negociacaoExistente","Promise","all","obterNegociacoesDaSemana","obterNegociacoesDaSemanaAnterior","obterNegociacoesDaSemanaRetrasada","resolve","reject","get","map","Date","objeto","data","quantidade","valor"],"mappings":"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","file":"NegociacaoService.js","sourcesContent":["import {HttpService} from \"./HttpService\";\nimport {ConnectionFactory} from \"./ConnectionFactory\";\nimport {NegociacaoDao} from \"../dao/NegociacaoDao\";\nimport {Negociacao} from \"../models/Negociacao\";\n\nexport class NegociacaoService {\n\n    constructor() {\n\n        this._http = new HttpService();\n\n    }\n\n    lista() {\n\n        return ConnectionFactory\n            .getConnection()\n            .then(connection => new NegociacaoDao(connection)) //O \"return\" aqui é implícito\n            .then(dao => dao.listaTodos()) //O \"return\" aqui é implícito. Retornará uma lista do metodo listaTodos()\n            .catch(erro => {\n                console.log(erro);\n                throw new Error(\"Não foi possível listar as Negociações\");\n            });\n\n    }\n\n    cadastra(negociacao) {\n\n        return ConnectionFactory\n            .getConnection()\n            .then(connection => new NegociacaoDao(connection))\n            .then(dao => dao.adiciona(negociacao))\n            .then(() => \"Negociação adicionada com sucesso!\")\n            .catch(erro => { \n                console.log(error);\n                throw new Error(\"Não foi possível adicionar a negociação.\")\n            });\n\n    }\n\n    apagaTodos() {\n\n        return ConnectionFactory\n            .getConnection()\n            .then(connection => new NegociacaoDao(connection))\n            .then(dao => dao.apagaTodos())\n            .then(() => \"Negociações apagadas com sucesso\")\n            .catch(erro => {\n                console.log(erro);\n                throw new Error(\"Não foi possível apagar as Negociações\");\n            })\n\n    }\n\n    importa(listaAtual) {\n\n        return  this\n                    .obterNegociacoes()\n                    .then(negociacoes =>\n                        negociacoes\n                            .reduce((arrayAchatado, array) => arrayAchatado.concat(array), [])\n                            .filter(negociacao =>\n                                !listaAtual.some(negociacaoExistente => negociacao.isEquals(negociacaoExistente)))\n                                    \n                    )\n                    .catch(error => {\n                        console.log(error);\n                        throw new Error(\"Não foi possível buscar as negociações para importar\");\n                    });\n\n    }\n\n    obterNegociacoes() {\n\n        return Promise.all([\n            this.obterNegociacoesDaSemana(),\n            this.obterNegociacoesDaSemanaAnterior(),\n            this.obterNegociacoesDaSemanaRetrasada()\n        ]);\n\n    }\n\n    obterNegociacoesDaSemana() {\n\n        return new Promise((resolve, reject) => {\n\n            this._http\n                .get(\"negociacoes/semana\")\n                .then(negociacoes => {\n                    resolve( negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor)) )\n                })\n                .catch(error => {\n                    console.log(error);\n                    reject(\"Não foi possível obter as negociações da Semana\");\n                });\n\n        });\n\n    }\n\n    obterNegociacoesDaSemanaRetrasada() {\n\n        return new Promise((resolve, reject) => {\n\n            this._http\n                .get(\"negociacoes/retrasada\")\n                .then(negociacoes => {\n                    resolve(negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor)))\n                })\n                .catch(error => {\n                    console.log(error);\n                    reject(\"Não foi possível obter as negociações da Semana\");\n                });\n\n        });   \n\n    }\n\n    obterNegociacoesDaSemanaAnterior() {\n\n        return new Promise((resolve, reject) => {\n\n            this._http\n                .get(\"negociacoes/anterior\")\n                .then(negociacoes => {\n                    resolve(negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor)))\n                })\n                .catch(error => {\n                    console.log(error);\n                    reject(\"Não foi possível obter as negociações da Semana\");\n                });\n\n        });\n\n    }\n\n}"]}