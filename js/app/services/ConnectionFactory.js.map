{"version":3,"sources":["../../app-es6/services/ConnectionFactory.js"],"names":["stores","version","dbName","conn","close","ConnectionFactory","Error","Promise","resolve","reject","openRequest","window","indexedDB","open","onupgradeneeded","_createStores","e","target","result","onsuccess","bind","onerror","console","log","error","name","connection","forEach","objectStoreNames","contains","store","deleteObjectStore","createObjectStore","autoIncrement"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAMA,kB,GAAS,CAAC,aAAD,C;AACTC,mB,GAAU,C;AACVC,kB,GAAS,Y;AAEXC,gB,GAAO,I;AACPC,iB,GAAQ,I;;yCAECC,iB;AAET,6CAAc;AAAA;;AACV,0BAAM,IAAIC,KAAJ,CAAU,sDAAV,CAAN;AACH;;;;oDAEsB;;AAEnB,+BAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEpC,gCAAIC,cAAcC,OAAOC,SAAP,CAAiBC,IAAjB,CAAsBX,MAAtB,EAA8BD,OAA9B,CAAlB;AACAS,wCAAYI,eAAZ,GAA8B,aAAK;;AAE/BT,kDAAkBU,aAAlB,CAAgCC,EAAEC,MAAF,CAASC,MAAzC;AAEH,6BAJD;;AAMAR,wCAAYS,SAAZ,GAAwB,aAAK;;AAEzB,oCAAI,CAAChB,IAAL,EAAW;AACPA,2CAAOa,EAAEC,MAAF,CAASC,MAAhB;AACAd,4CAAQD,KAAKC,KAAL,CAAWgB,IAAX,CAAgBjB,IAAhB,CAAR;AACAA,yCAAKC,KAAL,GAAa,YAAW;AACpB,8CAAM,IAAIE,KAAJ,CAAU,6CAAV,CAAN;AACH,qCAFD;AAGH;AACDE,wCAAQL,IAAR;AAEH,6BAXD;;AAaAO,wCAAYW,OAAZ,GAAsB,aAAK;;AAEvBC,wCAAQC,GAAR,CAAYP,EAAEC,MAAF,CAASO,KAArB;AACAf,uCAAOO,EAAEC,MAAF,CAASO,KAAT,CAAeC,IAAtB;AAEH,6BALD;AAOH,yBA7BM,CAAP;AA+BH;;;sDAEuB;;AAEpB,4BAAGtB,IAAH,EAAS;AACLC;AACAD,mCAAO,IAAP;AACH;AAEJ;;;kDAEoBuB,U,EAAY;;AAE7B1B,+BAAO2B,OAAP,CAAe,iBAAS;;AAEpB,gCAAID,WAAWE,gBAAX,CAA4BC,QAA5B,CAAqCC,KAArC,CAAJ,EAAiD;AAC7CJ,2CAAWK,iBAAX,CAA6BD,KAA7B;AACH;;AAEDJ,uCAAWM,iBAAX,CAA6BF,KAA7B,EAAoC,EAAEG,eAAe,IAAjB,EAApC;AAEH,yBARD;AAUH","file":"ConnectionFactory.js","sourcesContent":["const stores = ['negociacoes'];\nconst version = 5;\nconst dbName = 'aluraframe';\n\nvar conn = null;\nvar close = null;\n\nexport class ConnectionFactory {\n\n    constructor() {\n        throw new Error(\"Não é possível criar instâncias de ConnectionFactory\");\n    }\n\n    static getConnection() {\n\n        return new Promise((resolve, reject) => {\n\n            let openRequest = window.indexedDB.open(dbName, version);\n            openRequest.onupgradeneeded = e => {\n\n                ConnectionFactory._createStores(e.target.result);\n\n            };\n\n            openRequest.onsuccess = e => {\n\n                if (!conn) { \n                    conn = e.target.result;\n                    close = conn.close.bind(conn);\n                    conn.close = function() {\n                        throw new Error(\"Você não pode fechar diretamente a conexão.\");\n                    }\n                };\n                resolve(conn);\n\n            };\n\n            openRequest.onerror = e => {\n\n                console.log(e.target.error);\n                reject(e.target.error.name);\n\n            };\n\n        });\n\n    }\n\n    static closeConnection(){\n\n        if(conn) {\n            close();\n            conn = null;\n        }\n\n    }\n\n    static _createStores(connection) {\n\n        stores.forEach(store => {\n\n            if (connection.objectStoreNames.contains(store)) {\n                connection.deleteObjectStore(store);\n            }\n\n            connection.createObjectStore(store, { autoIncrement: true });\n\n        });\n\n    }\n\n}\n"]}