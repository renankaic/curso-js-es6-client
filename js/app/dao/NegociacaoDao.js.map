{"version":3,"sources":["../../app-es6/dao/NegociacaoDao.js"],"names":["NegociacaoDao","connection","_connection","_store","negociacao","Promise","resolve","reject","request","transaction","objectStore","add","onsuccess","onerror","console","log","e","target","error","negociacoes","cursor","openCursor","atual","result","dado","value","push","Negociacao","_data","_quantidade","_valor","continue","clear"],"mappings":";;;;;;IAAMA,a;AAEF,2BAAYC,UAAZ,EAAwB;AAAA;;AAEpB,aAAKC,WAAL,GAAmBD,UAAnB;AACA,aAAKE,MAAL,GAAc,aAAd;AAEH;;;;iCAEQC,U,EAAY;AAAA;;AAEjB,mBAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEpC,oBAAIC,UAAU,MAAKN,WAAL,CACTO,WADS,CACG,CAAC,MAAKN,MAAN,CADH,EACkB,WADlB,EAETO,WAFS,CAEG,MAAKP,MAFR,EAGTQ,GAHS,CAGLP,UAHK,CAAd;;AAKAI,wBAAQI,SAAR,GAAoB,aAAK;AACrBN;AACH,iBAFD;;AAIAE,wBAAQK,OAAR,GAAkB,aAAK;;AAEnBC,4BAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAArB;AACAX,2BAAO,yCAAP;AAEH,iBALD;AAOH,aAlBM,CAAP;AAoBH;;;qCAEY;AAAA;;AAET,mBAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEpC,oBAAIY,cAAc,EAAlB;AACA,oBAAIC,SAAS,OAAKlB,WAAL,CACRO,WADQ,CACI,CAAC,OAAKN,MAAN,CADJ,EACmB,WADnB,EAERO,WAFQ,CAEI,OAAKP,MAFT,EAGRkB,UAHQ,EAAb;;AAKAD,uBAAOR,SAAP,GAAmB,aAAK;;AAEpB;AACA,wBAAIU,QAAQN,EAAEC,MAAF,CAASM,MAArB;;AAEA,wBAAID,KAAJ,EAAW;;AAEP,4BAAIE,OAAOF,MAAMG,KAAjB;;AAEAN,oCAAYO,IAAZ,CAAiB,IAAIC,UAAJ,CAAeH,KAAKI,KAApB,EAA2BJ,KAAKK,WAAhC,EAA6CL,KAAKM,MAAlD,CAAjB;;AAEAR,8BAAMS,QAAN;AAEH,qBARD,MAQO;;AAEHzB,gCAAQa,WAAR;AAEH;AAEJ,iBAnBD;;AAqBAC,uBAAOP,OAAP,GAAiB,aAAK;;AAElBC,4BAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAArB;AACAX,2BAAO,wCAAP;AAEH,iBALD;AAOH,aApCM,CAAP;AAsCH;;;qCAEY;AAAA;;AAET,mBAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEpC,oBAAIC,UAAU,OAAKN,WAAL,CACTO,WADS,CACG,CAAC,OAAKN,MAAN,CADH,EACkB,WADlB,EAETO,WAFS,CAEG,OAAKP,MAFR,EAGT6B,KAHS,EAAd;;AAKAxB,wBAAQI,SAAR,GAAoB;AAAA,2BAAKN,QAAQ,mCAAR,CAAL;AAAA,iBAApB;;AAEAE,wBAAQK,OAAR,GAAkB,aAAK;AACnBC,4BAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAArB;AACAX,2BAAO,yCAAP;AACH,iBAHD;AAKH,aAdM,CAAP;AAgBH","file":"NegociacaoDao.js","sourcesContent":["class NegociacaoDao {\n\n    constructor(connection) {\n\n        this._connection = connection;\n        this._store = 'negociacoes';\n\n    }\n\n    adiciona(negociacao) {\n\n        return new Promise((resolve, reject) => {\n\n            let request = this._connection\n                .transaction([this._store], 'readwrite')\n                .objectStore(this._store)\n                .add(negociacao);\n            \n            request.onsuccess = e => {\n                resolve();\n            };\n\n            request.onerror = e => {\n\n                console.log(e.target.error)\n                reject(\"Não foi possível adicionar a negociação\");\n                \n            };\n\n        });\n\n    }\n\n    listaTodos() {\n\n        return new Promise((resolve, reject) => {\n\n            let negociacoes = [];\n            let cursor = this._connection\n                .transaction([this._store], 'readwrite')\n                .objectStore(this._store)\n                .openCursor();\n            \n            cursor.onsuccess = e => {\n\n                //Pega o ponteiro do dado no banco\n                let atual = e.target.result;\n\n                if (atual) {\n\n                    let dado = atual.value;\n\n                    negociacoes.push(new Negociacao(dado._data, dado._quantidade, dado._valor));\n\n                    atual.continue();\n\n                } else {\n\n                    resolve(negociacoes);\n\n                }\n\n            };\n\n            cursor.onerror = e => {\n\n                console.log(e.target.error);\n                reject(\"Não foi possível listar as Negociações\");\n\n            };\n\n        });\n\n    }\n\n    apagaTodos() {\n\n        return new Promise((resolve, reject) => {\n\n            let request = this._connection\n                .transaction([this._store], 'readwrite')\n                .objectStore(this._store)\n                .clear();\n\n            request.onsuccess = e => resolve(\"Negociações removidas com sucesso\");\n\n            request.onerror = e => { \n                console.log(e.target.error);\n                reject(\"Não foi possível remover as negociações\");\n            }\n\n        });\n\n    }\n}"]}